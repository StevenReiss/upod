/********************************************************************************/
/*										*/
/*		Condition.java							*/
/*										*/
/*	Condition definitions for user-programming of devices			*/
/*										*/
/********************************************************************************/
/*	Copyright 2013 Brown University -- Steven P. Reiss		      */
/*********************************************************************************
 *  Copyright 2013, Brown University, Providence, RI.				 *
 *										 *
 *			  All Rights Reserved					 *
 *										 *
 *  Permission to use, copy, modify, and distribute this software and its	 *
 *  documentation for any purpose other than its incorporation into a		 *
 *  commercial product is hereby granted without fee, provided that the 	 *
 *  above copyright notice appear in all copies and that both that		 *
 *  copyright notice and this permission notice appear in supporting		 *
 *  documentation, and that the name of Brown University not be used in 	 *
 *  advertising or publicity pertaining to distribution of the software 	 *
 *  without specific, written prior permission. 				 *
 *										 *
 *  BROWN UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS		 *
 *  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND		 *
 *  FITNESS FOR ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL BROWN UNIVERSITY	 *
 *  BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY 	 *
 *  DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,		 *
 *  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS		 *
 *  ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 	 *
 *  OF THIS SOFTWARE.								 *
 *										 *
 ********************************************************************************/





package edu.brown.cs.upod.spec;






/**
 *	A condition describes when a particular action should be applied.	
 *
 *	This describes a standard condition.  There are several special types
 *	of conditions that are supported by the system.  One is time-based
 *	where the condition reflects either a single time (for a trigger) or
 *	a time period.	A second is logical.  This represents an AND (or OR?)
 *	of other conditions.  A third is positional.  This represents the
 *	location of an object or user (and hence can assume properties based
 *	on location).  A fourth is state-based.  This reflects real-world condition
 *	being in a particular state (e.g. the telephone is in use).  A fifth is
 *	time+<condition> based, i.e. this condition has been true (or false) for
 *	a specified amount of time.
 *	
 **/



public interface Condition {


/**
 *	Return the name of the condition
 **/

String getName();



/**
 *	Return a descirption of the condition
 **/

String getDescription();



/**
 *	Determine the relationship between two conditions
 **/

Relationship getRelation(Condition c);



enum Relationship {
   NONE,
   IMPLIES,
   IMPLIED_BY,
   SAME,
   USUALLY_IMPLIES,
   USUALLY_IMPLIED_BY,
   USUALLY_SAME,
   EVENTUALLY_IMPLIES,
   EVENTUALLY_IMPLIED_BY;
   EVENTUALLY_SAME,
   IMPLIES_NOT,
   NOT_IMPLIED_BY
};



}	// end of interface Condition




/* end of Condition.java */
